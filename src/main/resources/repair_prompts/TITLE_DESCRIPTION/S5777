Exception testing via JUnit @Test annotation should be avoided
Why is this an issue? When testing exception via @Test annotation, having additional assertions inside that test method can be problematic because any code after the raised exception will not be executed. It will prevent you to test the state of the program after the raised exception and, at worst, make you misleadingly think that it is executed. You should consider moving any assertions into a separate test method where possible, or using org.junit.Assert.assertThrows instead. Alternatively, you could use try-catch idiom for JUnit version < 4.13 or if your project does not support lambdas. 
### Noncompliant
{{BUGGY}}
### Compliant
