"InterruptedException" and "ThreadDeath" should not be ignored
Why is this an issue? If an InterruptedException or a ThreadDeath error is not handled properly, the information that the thread was interrupted will be lost. Handling this exception means either to re-throw it or manually re-interrupt the current thread by calling Thread.interrupt(). Simply logging the exception is not sufficient and counts as ignoring it. Between the moment the exception is caught and handled, is the right time to perform cleanup operations on the methodâ€™s state, if needed. What is the potential impact? Failing to interrupt the thread (or to re-throw) risks delaying the thread shutdown and losing the information that the thread was interrupted - probably without finishing its task. 
### Noncompliant
{{BUGGY}}
### Compliant
