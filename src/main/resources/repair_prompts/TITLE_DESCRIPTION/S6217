Permitted types of a sealed class should be omitted if they are declared in the same file
Why is this an issue? sealed classes were introduced in Java 17. This feature is very useful if there is a need to define a strict hierarchy and restrict the possibility of extending classes. In order to mention all the allowed subclasses, there is a keyword permits, which should be followed by subclasses' names. This notation is quite useful if subclasses of a given sealed class can be found in different files, packages, or even modules. In case when all subclasses are declared in the same file there is no need to mention the explicitly and permits part of a declaration can be omitted. This rule reports an issue if all subclasses of a sealed class are declared in the same file as their superclass. 
### Noncompliant
{{BUGGY}}
### Compliant
