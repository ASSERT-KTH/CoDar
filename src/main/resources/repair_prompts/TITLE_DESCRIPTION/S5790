JUnit5 inner test classes should be annotated with @Nested
Why is this an issue? If not annotated with @Nested, an inner class containing some tests will never be executed during tests execution. While you could still be able to manually run its tests in an IDE, it wonâ€™t be the case during the build. By contrast, a static nested class containing some tests should not be annotated with @Nested, JUnit5 will not share setup and state with an instance of its enclosing class. This rule raises an issue on inner classes and static nested classes containing JUnit5 test methods which has a wrong usage of @Nested annotation. Note: This rule does not check if the context in which JUnit 5 is running (e.g. Maven Surefire Plugin) is properly configured to execute static nested classes, it could not be the case using the default configuration. 
### Noncompliant
{{BUGGY}}
### Compliant
