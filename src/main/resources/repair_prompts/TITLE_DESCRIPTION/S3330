Creating cookies without the "HttpOnly" flag is security-sensitive
When a cookie is configured with the HttpOnly attribute set to true, the browser guaranties that no client-side script will be able to read it. In most cases, when a cookie is created, the default value of HttpOnly is false and it’s up to the developer to decide whether or not the content of the cookie can be read by the client-side script. As a majority of Cross-Site Scripting (XSS) attacks target the theft of session-cookies, the HttpOnly attribute can help to reduce their impact as it won’t be possible to exploit the XSS vulnerability to steal session-cookies. Ask Yourself Whether the cookie is sensitive, used to authenticate the user, for instance a session-cookie the HttpOnly attribute offer an additional protection (not the case for an XSRF-TOKEN cookie / CSRF token for example) There is a risk if you answered yes to any of those questions. Recommended Secure Coding Practices By default the HttpOnly flag should be set to true for most of the cookies and it’s mandatory for session / sensitive-security cookies. 
### Noncompliant
{{BUGGY}}
### Compliant
