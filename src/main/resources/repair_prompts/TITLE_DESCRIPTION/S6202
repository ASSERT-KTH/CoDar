Operator "instanceof" should be used instead of "A.class.isInstance()"
Why is this an issue? The instanceof construction is a preferred way to check whether a variable can be cast to some type statically because a compile-time error will occur in case of incompatible types. The method isInstance() from java.lang.Class works differently and does type check at runtime only, incompatible types will therefore not be detected early in the development, potentially resulting in dead code. The isInstance() method should only be used in dynamic cases when the instanceof operator canâ€™t be used. This rule raises an issue when isInstance() is used and could be replaced with an instanceof check. 
### Noncompliant
{{BUGGY}}
### Compliant
