A new session should be created during user authentication
Why is this an issue? Session fixation attacks occur when an attacker can force a legitimate user to use a session ID that he knows. To avoid fixation attacks, it’s a good practice to generate a new session each time a user authenticates and delete/invalidate the existing session (the one possibly known by the attacker). 
### Noncompliant
In a Spring Security’s context, session fixation protection is enabled by default but can be disabled with sessionFixation().none() method: @Override
protected void configure(HttpSecurity http) throws Exception {
   http.sessionManagement()
     .sessionFixation().none(); // Noncompliant: the existing session will continue
}
 
### Compliant
In a Spring Security’s context, session fixation protection can be enabled as follows: @Override
protected void configure(HttpSecurity http) throws Exception {
  http.sessionManagement()
     .sessionFixation().newSession(); 

  // or

  http.sessionManagement()
     .sessionFixation().migrateSession(); 
}
 Resources OWASP Top 10 2021 Category A7 - Identification and Authentication Failures OWASP Top 10 2017 Category A2 - Broken Authentication OWASP Sesssion Fixation MITRE, CWE-384 - Session Fixation
### Noncompliant
{{BUGGY}}
### Compliant
