"wait", "notify" and "notifyAll" should only be called when a lock is obviously held on an object
Why is this an issue? By contract, the method Object.wait(...), Object.notify() and Object.notifyAll() should be called by a thread that is the owner of the objectâ€™s monitor. If this is not the case an IllegalMonitorStateException exception is thrown. This rule reinforces this constraint by making it mandatory to call one of these methods only inside a synchronized method or statement. 
### Noncompliant
private void removeElement() {
  while (!suitableCondition()){
    obj.wait();
  }
  ... // Perform removal
}
### Compliant
private void removeElement() {
  synchronized(obj) {
    while (!suitableCondition()){
      obj.wait();
    }
    ... // Perform removal
  }
}
### Noncompliant
{{BUGGY}}
### Compliant
