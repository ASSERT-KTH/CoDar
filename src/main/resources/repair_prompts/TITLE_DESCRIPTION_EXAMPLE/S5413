'List.remove()' should not be used in ascending 'for' loops
Why is this an issue? When List.remove() is called it will shrink the list. If this is done inside the ascending loop iterating through all elements it will skip the element after the removed index. 
### Noncompliant
void removeFrom(List<String> list) {
  // expected: iterate over all the elements of the list
  for (int i = 0; i < list.size(); i++) {
    if (list.get(i).isEmpty()) {
      // actual: remaining elements are shifted, so the one immediately following will be skipped
      list.remove(i); // Noncompliant
    }
  }
}
### Compliant
static void removeFrom(List<String> list) {
    // expected: iterate over all the elements of the list
    for (int i = 0; i < list.size(); i++) {
      if (list.get(i).isEmpty()) {
        // actual: remaining elements are shifted, so the one immediately following will be skipped
        list.remove(i);
        i--;
      }
    }
  }
### Noncompliant
{{BUGGY}}
### Compliant
