Methods should not be empty
Why is this an issue? There are several reasons for a method not to have a method body: It is an unintentional omission, and should be fixed to prevent an unexpected behavior in production. It is not yet, or never will be, supported. In this case an UnsupportedOperationException should be thrown. The method is an intentionally-blank override. In this case a nested comment should explain the reason for the blank override. 
### Noncompliant
public void doSomething() {
}

public void doSomethingElse() {
}
### Compliant
@Override
public void doSomething() {
  // Do nothing because of X and Y.
}

@Override
public void doSomethingElse() {
  throw new UnsupportedOperationException();
}
### Noncompliant
{{BUGGY}}
### Compliant
