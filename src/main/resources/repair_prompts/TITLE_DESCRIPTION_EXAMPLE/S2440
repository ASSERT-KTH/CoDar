Classes with only "static" methods should not be instantiated
Why is this an issue? static methods can be accessed without an instance of the enclosing class, so thereâ€™s no reason to instantiate a class that has only static methods. 
### Noncompliant
public class TextUtils {
  public static String stripHtml(String source) {
    return source.replaceAll("<[^>]+>", "");
  }
}

public class TextManipulator {

  // ...

  public void cleanText(String source) {
    TextUtils textUtils = new TextUtils(); // Noncompliant

    String stripped = textUtils.stripHtml(source);

    //...
  }
}
### Compliant
public class TextUtils {
  public static String stripHtml(String source) {
    return source.replaceAll("<[^>]+>", "");
  }
}

public class TextManipulator {

  // ...

  public void cleanText(String source) {
    String stripped = TextUtils.stripHtml(source);

    //...
  }
}
### Noncompliant
{{BUGGY}}
### Compliant
