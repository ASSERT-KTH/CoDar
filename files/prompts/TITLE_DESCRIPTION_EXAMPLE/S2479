Whitespace and control characters in literals should be explicit
Non-encoded control characters and whitespace characters are often injected in the source code because of a bad manipulation. They are either invisible or difficult to recognize, which can result in bugs when the string is not what the developer expects. If you actually need to use a control character use their encoded version (ex: ASCII \n,\t,… or Unicode U+000D, U+0009,…). This rule raises an issue when the following characters are seen in a literal string: ASCII control character. (character index < 32 or = 127) Unicode whitespace characters. Unicode C0 control characters Unicode characters U+200B, U+200C, U+200D, U+2060, U+FEFF, U+2028, U+2029 No issue will be raised on the simple space character. Unicode U+0020, ASCII 32. 
### Noncompliant
String tabInside = "A	B";  // Noncompliant, contains a tabulation
String zeroWidthSpaceInside = "foo​bar"; // Noncompliant, it contains a U+200B character inside
char tab = '	';
### Compliant
String tabInside = "A\tB";  
String zeroWidthSpaceInside = "foo\u200Bbar";  
char tab = '\t';
### Noncompliant
{{BUGGY}}
### Compliant
