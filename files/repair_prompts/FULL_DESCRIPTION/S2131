Primitives should not be boxed just for "String" conversion
"Boxing" is the process of putting a primitive value into a primitive-wrapper object. When that’s done purely to use the wrapper class' toString method, it’s a waste of memory and cycles because those methods are static, and can therefore be used without a class instance. Similarly, using the static method valueOf in the primitive-wrapper classes with a non-String argument should be avoided. 
### Noncompliant
int myInt = 4;
String myIntString = (new Integer(myInt)).toString(); // Noncompliant; creates & discards an Integer object
myIntString = Integer.valueOf(myInt).toString(); // Noncompliant
 
### Compliant
int myInt = 4;
String myIntString = Integer.toString(myInt);
 Deprecated This rule is deprecated; use {rule:java:S1158} instead.
### Noncompliant
{{BUGGY}}
### Compliant
